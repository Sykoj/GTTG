// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SZDC.Data;

namespace SZDC.Data.Migrations
{
    [DbContext(typeof(SzdcContext))]
    partial class SzdcContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SZDC.Data.Model.OrderedTrack", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Order");

                    b.Property<string>("StationName");

                    b.Property<long>("TrackId");

                    b.HasKey("Id");

                    b.HasIndex("StationName");

                    b.HasIndex("TrackId");

                    b.ToTable("OrderedTrack");
                });

            modelBuilder.Entity("SZDC.Data.Model.Railway", b =>
                {
                    b.Property<string>("RailwayNumber")
                        .ValueGeneratedOnAdd();

                    b.HasKey("RailwayNumber");

                    b.ToTable("Railways");
                });

            modelBuilder.Entity("SZDC.Data.Model.RailwaySection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("RailwayNumber");

                    b.Property<int?>("TrainNumber");

                    b.HasKey("Id");

                    b.HasIndex("RailwayNumber");

                    b.HasIndex("TrainNumber");

                    b.ToTable("RailwaySection");
                });

            modelBuilder.Entity("SZDC.Data.Model.RailwaySectionStation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("KilometersInSegment");

                    b.Property<string>("KilometersString");

                    b.Property<long?>("RailwaySectionId");

                    b.Property<string>("StationName")
                        .IsRequired();

                    b.Property<int>("StationOrder");

                    b.HasKey("Id");

                    b.HasIndex("RailwaySectionId");

                    b.HasIndex("StationName");

                    b.ToTable("RailwaySectionStation");
                });

            modelBuilder.Entity("SZDC.Data.Model.StaticTrainEvent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("HasMoreThan30Seconds");

                    b.Property<int>("Hours");

                    b.Property<int>("Minutes");

                    b.HasKey("Id");

                    b.ToTable("StaticTrainEvent");
                });

            modelBuilder.Entity("SZDC.Data.Model.Station", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Name");

                    b.ToTable("Station");
                });

            modelBuilder.Entity("SZDC.Data.Model.StationStop", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("ArrivalId");

                    b.Property<long?>("DepartureId");

                    b.Property<string>("StationName");

                    b.HasKey("Id");

                    b.HasIndex("ArrivalId");

                    b.HasIndex("DepartureId");

                    b.HasIndex("StationName");

                    b.ToTable("StationStop");
                });

            modelBuilder.Entity("SZDC.Data.Model.StationStopOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Order");

                    b.Property<long>("StationStopId");

                    b.Property<int?>("TrainNumber");

                    b.HasKey("Id");

                    b.HasIndex("StationStopId");

                    b.HasIndex("TrainNumber");

                    b.ToTable("StationStopOrder");
                });

            modelBuilder.Entity("SZDC.Data.Model.Track", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Number");

                    b.Property<int?>("TrackType");

                    b.HasKey("Id");

                    b.ToTable("Track");
                });

            modelBuilder.Entity("SZDC.Data.Model.Train", b =>
                {
                    b.Property<int>("TrainNumber")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("TrainType");

                    b.HasKey("TrainNumber");

                    b.ToTable("Trains");
                });

            modelBuilder.Entity("SZDC.Data.Model.OrderedTrack", b =>
                {
                    b.HasOne("SZDC.Data.Model.Station")
                        .WithMany("Tracks")
                        .HasForeignKey("StationName");

                    b.HasOne("SZDC.Data.Model.Track", "Track")
                        .WithMany()
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SZDC.Data.Model.RailwaySection", b =>
                {
                    b.HasOne("SZDC.Data.Model.Railway")
                        .WithMany("RailwaySections")
                        .HasForeignKey("RailwayNumber");

                    b.HasOne("SZDC.Data.Model.Train")
                        .WithMany()
                        .HasForeignKey("TrainNumber");
                });

            modelBuilder.Entity("SZDC.Data.Model.RailwaySectionStation", b =>
                {
                    b.HasOne("SZDC.Data.Model.RailwaySection")
                        .WithMany("Stations")
                        .HasForeignKey("RailwaySectionId");

                    b.HasOne("SZDC.Data.Model.Station", "Station")
                        .WithMany()
                        .HasForeignKey("StationName")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SZDC.Data.Model.StationStop", b =>
                {
                    b.HasOne("SZDC.Data.Model.StaticTrainEvent", "Arrival")
                        .WithMany()
                        .HasForeignKey("ArrivalId");

                    b.HasOne("SZDC.Data.Model.StaticTrainEvent", "Departure")
                        .WithMany()
                        .HasForeignKey("DepartureId");

                    b.HasOne("SZDC.Data.Model.Station", "Station")
                        .WithMany()
                        .HasForeignKey("StationName");
                });

            modelBuilder.Entity("SZDC.Data.Model.StationStopOrder", b =>
                {
                    b.HasOne("SZDC.Data.Model.StationStop", "StationStop")
                        .WithMany()
                        .HasForeignKey("StationStopId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SZDC.Data.Model.Train")
                        .WithMany("Schedule")
                        .HasForeignKey("TrainNumber");
                });
#pragma warning restore 612, 618
        }
    }
}
